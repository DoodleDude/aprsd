VERSION 1.0
-----------

* Fix thread contention problem leading to delays in 
  incoming packet processing. 
      DONE (1.0b2)
     
* Change package name and separate out HTTP server code.
      DONE (1.0b2)

* Administrative interface 
      STARTED (status screen) (1.0b2)

* Announce version id on login to APRS-IS
      DONE (1.0b3)
     
* Allow symbol overlays
      DONE (1.0b3)

* Possible deadlock problem
      DONE (1.0b4)
      
* APRS-IS connect retry and give up. Fix. 
      DONE.
   
* polaric-passwd script? 

* Timestamp parsing. Date is wrong (future) in some rare cases. 5 sept -> 2 oct. 

* Alternative trail length.

           
* [C] Allow user to type in positions in Latlong format. 
      DONE (1.0b2)

* [C] Extent choice on load. Remember last extent on reload.
      DONE (1.0b4)

* [C] Local hiding of labels - survive zoom/pan and update of objects. 
      DONE (1.0b4)

* [C] Fixes to extent changing/zooming (Did not always trigger XML reload).
      DONE (1.0b4)
      
* [C] New bug: Permalink problems because of temporary map layer during startup.
      DONE

* [C] OpenLayers upgrade. 
      DONE
      
* [C] Google Chrome issues. 

* [C] Zoom to full extents - remove or fix.
     
* [C] Map dragging problem with FF under Windows. 

* [C] Sometimes last update in trail is missing. Fix?

* Code cleanups, stress test and performance tuning? 


Preparations for V.2.0 M.0
--------------------------
 
* Replace HTTP server (efficiency, extensibility). The "Simple 
  framework" http://www.simpleframework.org can be a good candidate. 
  Jetty may be a little complicated to set up?

* Allow a dynamic number of data channels to be configured. 
  Not just two. 

* Allow objects with certain attributes (like input channel, callsign) to 
  be visible only for logged in users. And/Or allow aliases, etc. 
  to be visible only for logged in users. SAR mode? 

* Change class hierarchy to support other types of position objects, 
  not just plain APRS. 

* AIS objects and input channel.    
  
* Permissions (objects, other)? Sender id? Consider simple user profile support? 

* More configurable view profiles? 

* More flexible logging?
 
* [C] Clean-up and move to latest version of OpenLayers. 

 
 
 VERSION 2.0. M.0
 ----------------
 
 Use a database system for storing position/APRS data and try to 
 make the code more modular/extensible. 
  
 * Conceptual model
 * Revise class hierarchy. Focus on data. Make the switch to database easier. 
   Some changes may however wait until we move to database. 
 * Initial database schema.
 * Implementation. 
  
 * Consider web framework/http server like Lift or Servlets/JSP. Consider
   a more MVC based design. 
 