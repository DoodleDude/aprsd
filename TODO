
V.1.2 (february 2013)
--------------------

* Implement and test configuration support (see also list below). Config plugin. 
     DONE (mostly).
     
* [M] Better styling of forms for mobile. Consider JQuery mobile.

* [M] Remove rubber-zoom button? Something more useful?

* [M] Adjust CSS for scale/status box for mobile.

* [C] Hack and use OL offline tile caching??

* [C] Allow auto-including of plugin css and js
    DONE.
    
* [C] Allow more than one plugin js to add callback for menu.
    DONE.
    
* Consider auto including of plugins when installing? config.d subdirectory??

* Allow channels to be visible for logged in or SAR users only. 

* Move to Java 7
    DONE.

* Ensure that Java7 is used if both java6 and java7 are installed. 

* Move to Scala 1.8+
    DONE.

* Object expire. Should not expire own objects? Fix. 
    DONE. 

* Plugin manager starts AFTER http server and AFTER StationDB -> 
  Those do not get parameters from webconfig plugin! FIX. 
    DONE.
  
* [C] Install a password file with user admin, initially. 
    DONE. 
    
* [C] Fix serious bug: Menu didn't work if plugins didn't add menu-items. 
    DONE.

* Init file: Find correct JAVA_HOME setting. FIX. 



V.1.3 (march 2013)
------------------

GoOpen conference! 


V.1.4 (april 2013)
------------------

NRRL dagene.




Configuration support
---------------------

* Configuration support. E.g. parsing boolean values. 
  api.getConfig - direct access to parameter.
     DONE.
     
* Make a list of class <-> parameter relationships
     DONE.

* Support for run-time overrides to config parameters.
     DONE.
     
* Support for persistence of config overrides. 
     DONE.
     
* Consider per-use reading of parameters
     
* Look at httpd/ServerBase.java: Can some config parameters be made static
  to reduce redundant storage when there are multiple instances? 

* Make channel classes and other relevant classes implement 
  ManagedObject interface. Consider re-load without needing to 
  restart server.



    
Channels/Sources
----------------

* Filters based on getSource. Experiment.  

* Access control and visibility to clients
     
* Channel code in separate subpackage / subdirectory: 
    - Move out Channel, InetChannel, TncChannel and DupCheck. 
    - Rename Channel to ChannelBase
    - Channel interface in core
    
* Flexible Gate for routing packets to and between channels? igate --> router
    - Router specification? Router framework?
    - Allow translation between protocols? Pluggable modules. 

* Soundmodem plugin
     STARTED.

* AIS plugin

* Receive positions from clients (mobile app). This is both a source and a web-service?
  Separate plugin? 
  
* [C] Elevation profile from kartverket WPS? 

   

 
Web Service
-----------

* XML support for a collection of points (without anything else). something a la <linestring>?
       DONE (pointcloud)
       
* [C] XML support for a displaying a collection of points (without anything else).
       DONE (pointcloud)



API, Extensibility
------------------

* [C] Javascript external API at client side.
      DONE (simple)

* [C] Javascript plugin arch/API at client side (may need index file to be php).
      DONE (simple) 

* Framework for web-interface extensions in Scala. 




Other. 
-----

* Import from GPX files (to layers?)

* Export to GPX files 

* App: Autodiscovery of servers on local network

* Messaging - a plugin? 

* Web config plugin

* Allow objects with certain attributes (like source, callsign) to 
  be visible only for logged in users. Note: Should this be part of a filter framework?
      STARTED

* Change class hierarchy to support other types of position objects, 
  not just plain APRS. 
      STARTED.
  
* AIS objects and input channel.
    
* Additions to search function?
  
* Permissions (objects, other)? Sender id? Consider simple user profile support? 

* More configurable view profiles?  Filter framework? Scripting?

 