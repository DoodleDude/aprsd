--------------------------
Preparations for V.2.0 M.0
Version 1.1, etc. 
--------------------------


* Messaging


Channels/Sources
----------------

* Proper naming of channels. 
     STARTED

* All geo-points should have getSource()?

* Filters based on getSource. Experiment.  

* More generic way to add and configure extra channels in config.
     
* Access control and visibility to clients
     
* Channel code in separate subpackage / subdirectory: 
    - Move out Channel, InetChannel, TncChannel and DupCheck. 
    - Rename Channel to ChannelBase
    - Channel interface in core
    
* Flexible Gate for routing packets to and between channels? igate --> router
    - Router specification? Router framework?
    - Allow translation between protocols? Pluggable modules. 

* KISS TNC support
     STARTED. NEEDS TESTING.

* Receive positions from clients (mobile app). This is both a source and a web-service?
  Separate plugin? 
  
* [C] Elevation profile from kartverket WPS? 
   
   

Mobile servers
--------------

* Support GPS (NMEA stream)

* Tracker module (builtin or special plugin??)

* Configuration parameter to activate mobility support. Indicate in XML (meta tag). 
     

 
Web Service
-----------

* Simplify webserver impl. (esp. Scala part). 



API, Extensibility
------------------

* [C] Javascript external API at client side.
* [C] Javascript plugin arch/API at client side (may need index file to be php).

* Framework for web-interface extensions in Scala. 



Database plugin
---------------

* Database setup. Collect simple update events in a database. 
       DONE.
       
* Can this be a plugin module? Database stuff should be completely optional in 1.1, 1.2
  etc.. (maybe core database stuff will be part of core P.S. in later releases).
       DONE.
       
* Move to PostgreSQL 9.1 and PostGIS 2.0

* Some experimentation in external programs/plugins? 
        
* Experimental search functionality/trails - but as external module? 
       DONE.

* [C] Fix/improve GUI for trail search 

* [C] API functions for trail search. Test with iframe. 

* Implement mission support - Server side
       STARTED

* [C] Implement experimental mission GUI (or maybe just an API) and start testing



Other. 
-----

* Allow a dynamic number of data channels to be configured. 
  Not just two. 
      STARTED (See above)

* Allow objects with certain attributes (like source, callsign) to 
  be visible only for logged in users. Note: Should this be part of a filter framework?
      STARTED

* Change class hierarchy to support other types of position objects, 
  not just plain APRS. 
      STARTED.
  
* AIS objects and input channel.
    
* Additions to search function?
  
* Permissions (objects, other)? Sender id? Consider simple user profile support? 

* More configurable view profiles?  Filter framework? Scripting?

* More flexible logging?
    STARTED (also in 1.0)

* Traffic load statistics (per station). 

* Search - and - change alias/icon

 